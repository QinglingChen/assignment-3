{"version":3,"sources":["components/AccountBalance.js","components/Home.js","components/UserProfile.js","components/Login.js","components/Credits.js","components/Debits.js","App.js","reportWebVitals.js","index.js"],"names":["AccountBalance","Component","render","React","createElement","this","props","accountBalance","Home","src","alt","Link","to","UserProfile","userName","memberSince","LogIn","constructor","super","handleChange","e","updatedUser","state","user","target","value","setState","handleSubmit","preventDefault","mockLogIn","redirect","password","Redirect","onSubmit","type","name","defaultValue","onChange","Credits","description","setDescription","useState","amount","setAmount","credits","setCredits","useEffect","fetch","then","response","json","data","slice","catch","error","console","placeholder","onClick","addCredit","newCredit","title","body","parseFloat","date","Date","toISOString","split","map","credit","index","key","Debits","debits","setDebits","newDebit","id","now","addDebit","required","step","debit","App","prevState","logInInfo","newUser","currentUser","creditList","debitList","componentDidMount","Promise","all","res","_ref","reduce","acc","Router","basename","Route","exact","path","HomeComponent","UserProfileComponent","LogInComponent","CreditsComponent","DebitsComponent","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3e7d2a3b.chunk.js","sourcesContent":["/*==================================================\nsrc/components/AccountBalance.js\n\nThe AccountBalance component displays account balance. It is included in other page views.\n==================================================*/\nimport React, {Component} from 'react';\n\nclass AccountBalance extends Component {\n  // Display account balance\n  render() {\n    return (\n      <div>\n        Balance: {this.props.accountBalance}\n      </div>\n    );\n  }\n}\n\nexport default AccountBalance;","/*==================================================\nsrc/components/Home.js\n\nThe Home component is used to demonstrate the use of Link.\n==================================================*/\nimport React, {Component} from 'react';\nimport AccountBalance from './AccountBalance';\nimport {Link} from 'react-router-dom';\n\nclass Home extends Component {\n  render() {\n    return (\n      <div>\n        <img src=\"https://picsum.photos/200/200\" alt=\"bank\"/>\n\n        <h1>Bank of React</h1>\n\n        <Link to=\"/userProfile\">User Profile</Link>\n        <br/>\n        <Link to=\"/login\">Login</Link>\n        <br/>\n        <Link to=\"/credits\">Credits</Link>\n        <br/>\n        <Link to=\"/debits\">Debits</Link>\n        <br/><br/>\n        <AccountBalance accountBalance={this.props.accountBalance}/>\n      </div>\n    );\n  }\n}\n\nexport default Home;","/*==================================================\nsrc/components/UserProfile.js\n\nThe UserProfile component is used to demonstrate the use of Route and Link.\nNote: You don't need to work on this file for the Assignment.\n==================================================*/\nimport React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\n\nclass UserProfile extends Component {\n  render() {\n    return (\n      <div>\n        <h1>User Profile</h1>\n\n        <div>Username: {this.props.userName}</div>\n        <div>Member Since: {this.props.memberSince}</div>\n        <br/>\n        <Link to=\"/\">Return to Home</Link>\n      </div>\n    );\n  }\n}\n\nexport default UserProfile;","/*==================================================\nsrc/components/Login.js\n\nThe LogIn component is used to demonstrate the use of Redirect.\nNote: You don't need to work on this file for the Assignment.\n==================================================*/\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport {Link} from 'react-router-dom';\n\nclass LogIn extends Component {\n  constructor (props) {  // Create and initialize state\n    super(props)\n    this.state = {\n      user: {\n        //userName: '',\n        userName: this.props.user.userName,  // Initialize userName using props input (currentUser in App.js)\n        password: ''\n      },\n      redirect: false  // Redirect property used to trigger Redirect\n    }\n  }\n\n  // When User Name input is changed, capture the new input value and update state\n  handleChange = (e) => {\n    const updatedUser = {...this.state.user};  // Create an object for state\n    updatedUser.userName = e.target.value;  // Set object's userName to the new input value\n    this.setState({user: updatedUser})  // Update state with object values\n  }\n\n  // When user clicked \"Log In\" button, store user data and then redirect to \"User Profile\" page\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.mockLogIn(this.state.user)  // Update state in the top-level component (App.js)\n    this.setState({redirect: true})  // Update state to trigger Redirect\n  }\n  \n  render () {\n    // Redirect to \"User Profile\" page when \"Log In\" button is clicked\n    if (this.state.redirect) {  \n      return (<Redirect to=\"/userProfile\"/>);\n    }\n\n    // Render the login form (and call \"handleSubmit\" method when \"Log In\" button is clicked to submit form)\n    return (\n      <div>\n        <h1>Login</h1>\n        \n        <form onSubmit={this.handleSubmit}>\n          <div>\n            <label>User Name</label>\n            <input type=\"text\" name=\"userName\" defaultValue={this.props.user.userName} onChange={this.handleChange} />\n          </div>\n          <div>\n            <label>Password</label>\n            <input type=\"password\" name=\"password\" />\n          </div>\n          <button>Log In</button>\n        </form>  \n        <br/>\n        <Link to=\"/\">Return to Home</Link>\n      </div>\n    );\n  }\n}\n\nexport default LogIn;","/*==================================================\nsrc/components/Credits.js\n\nThe Credits component contains information for Credits page view.\nNote: You need to work on this file for the Assignment.\n==================================================*/\nimport React, { useState, useEffect }  from 'react';\n//useState: Stores the state in the component, and the state can be updated by setState\n// useEffect: Perform side effects such as data requests, subscriptions, manual DOM manipulation, and so on.\nimport {Link} from 'react-router-dom';\n\nconst Credits = (props) => {\n  const [description, setDescription] = useState('');\n  const [amount, setAmount] = useState('');\n  const [credits, setCredits] = useState([]); //store credit history\n  //const [loading, setLoading] = useLoading(true); //loaded state\n\n  //fetch API data from fake\n  useEffect( () => {\n    //fetch('https://jsonplaceholder.typicode.com/posts')\n    fetch('https://johnnylaicode.github.io/api/credits.json')\n      .then(response => response.json())  // analysis JSON data\n      .then(data => {\n        setCredits(data.slice(0, 10)); // fetch the first ten data\n        //setLoading(false); // set loading statement to be false\n      })\n      .catch(error=>{\n        console.error('Error fetching credits:', error);\n      });\n\n  },[]);\n\n  //new function to update credit\n  const addCredit = () => {\n    const newCredit = {\n      title: description,\n      body: `Amount: $${amount}`,\n      amount: parseFloat(amount),\n      date: new Date().toISOString().split('T')[0], // Get current date in yyyy-mm-dd format\n    };\n    setCredits([newCredit,...credits]); // Add the new credit at the beginning of the credits list\n    setAmount('');  // Clear description input field\n    setDescription(''); // Clear amount input field\n    //this.props.addCredit(newCredit); //\n    props.addCredit(newCredit); //\n  };\n\n  //return react\n  return (\n    <div>\n      <h1>Credits</h1>\n\n      <div>\n        {/* Description input */}\n        <input\n          type = 'text'\n          placeholder = \"Description\"\n          value={description}\n          onChange={(e) => setDescription(e.target.value)} // Update description state\n        />\n\n        {/* Amount input */}\n        <input\n          type=\"number\"\n          placeholder=\"Amount\"\n          value={amount}\n          onChange={(e) => setAmount(e.target.value)} // Update amount state\n        />\n\n        {/* Add Credit button */}\n        <button onClick={addCredit}>Add Credit</button>\n\n      <h3>Credit List</h3>\n        <ul>\n          {/* Render the list of credits */}\n          {credits.map((credit, index) => (\n            <li key={index}>\n              <p>{credit.title}</p>   {/* Description */}\n              <p>{credit.body}</p>  {/* Amount */}\n              <p>Date: {credit.date}</p>  {/* Date */}\n            </li>\n          ))}\n        </ul>\n\n      </div>\n\n\n      <br/>\n      <Link to=\"/\">Return to Home</Link>\n    </div>\n  );\n}\n\nexport default Credits;","/*==================================================\nsrc/components/Debits.js\n\nThe Debits component contains information for Debits page view.\nNote: You need to work on this file for the Assignment.\n==================================================*/\nimport React, { useState, useEffect } from 'react';\nimport {Link} from 'react-router-dom';\n\nconst Debits = (props) => {\n  const [description, setDescription] = useState('');\n  const [amount, setAmount] = useState('');\n  const [debits, setDebits] = useState([]); //add debits\n\n  //fetch API data from fake\n  useEffect( () => {\n    //fetch('https://jsonplaceholder.typicode.com/posts')\n    fetch('https://johnnylaicode.github.io/api/debits.json')\n      .then(response => response.json())  // analysis JSON data\n      .then(data => {\n        setDebits(data.slice(0, 10)); // fetch the first ten data\n        //setLoading(false); // set loading statement to be false\n      })\n      .catch(error=>{\n        console.error('Error fetching credits:', error);\n      });\n\n  },[]);\n\n  // Create the list of Debit items\n  let debitsView = () => {\n    // const { debits } = props;\n    return debits.map((debit) => {  // Extract \"id\", \"amount\", \"description\" and \"date\" properties of each debits JSON array element\n      let date = debit.date.slice(0,10);\n      return <li key={debit.id}>{debit.amount} {debit.description} {date}</li>\n    });\n  }\n\n// Handle form submission\nconst handleAddDebit = (e) => {\n  e.preventDefault(); // Prevent page reload on form submit\n  const newDebit = {\n    id: Date.now(), // Unique ID based on current timestamp\n    amount: parseFloat(amount),\n    description,\n    date: new Date().toISOString().slice(0, 10), // Get current date in yyyy-mm-dd format\n  };\n  // Update local debits and pass new debit to parent if function exists\n  setDebits([newDebit, ...debits]);\n  if (props.addDebit) {\n    props.addDebit(newDebit);\n  }\n\n  setAmount(''); // Clear amount input field\n  setDescription(''); // Clear description input field\n  //this.props.addDebit(newDebit); //\n};\n\n  // Render the list of Debit items and a form to input new Debit item\n  return (\n    <div>\n      <h1>Debits</h1>\n\n    \n\n    <form onSubmit={handleAddDebit}>\n      <input\n        type=\"text\"\n        name=\"description\"\n        placeholder=\"Description\"\n        value={description}\n        onChange={(e) => setDescription(e.target.value)}\n        required\n      />\n      <input\n        type=\"number\"\n        name=\"amount\"\n        placeholder=\"Amount\"\n        value={amount}\n        onChange={(e) => setAmount(e.target.value)}\n        step=\"0.01\" //better UX when entering decimal values.\n        required\n      />\n      <button type=\"submit\">Add Debit</button>\n    </form>\n\n    <ul>{debitsView()}</ul>\n\n    <br />\n    <Link to=\"/\">Return to Home</Link>\n    </div>\n    \n  );\n}\n\nexport default Debits;","/*==================================================\nsrc/App.js\n\nThis is the top-level component of the app.\nIt contains the top-level state.\n==================================================*/\nimport React, {Component} from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\n\n// Import other components\nimport Home from './components/Home';\nimport UserProfile from './components/UserProfile';\nimport LogIn from './components/Login';\nimport Credits from './components/Credits';\nimport Debits from './components/Debits';\n\nclass App extends Component {\n  constructor() {  // Create and initialize state\n    super(); \n    this.state = {\n      accountBalance: 1234567.89,\n      creditList: [],\n      debitList: [],\n      currentUser: {\n        userName: 'Joe Smith',\n        memberSince: '11/22/99',\n      }\n    };\n  }\n\n  // Add Credit\n  addCredit = (newCredit) => {\n    this.setState((prevState) => {\n      const updatedCredits = [...prevState.credits, newCredit];\n      const updatedBalance = prevState.accountBalance + newCredit.amount;\n\n      return { credits: updatedCredits, accountBalance: updatedBalance };\n    });\n  };\n\n  // Add Debit\n  addDebit = (newDebit) => {\n    this.setState((prevState) => {\n      const updatedDebits = [...prevState.debits, newDebit];\n      const updatedBalance = prevState.accountBalance - newDebit.amount;\n\n      return { debits: updatedDebits, accountBalance: updatedBalance };\n    });\n  };\n\n  // Update state's currentUser (userName) after \"Log In\" button is clicked\n  mockLogIn = (logInInfo) => {  \n    const newUser = {...this.state.currentUser};\n    newUser.userName = logInInfo.userName;\n    this.setState({currentUser: newUser})\n  }\n\n  // Fetch data on component mount\n  componentDidMount() {\n    Promise.all([\n      fetch('https://johnnylaicode.github.io/api/credits.json').then((res) => res.json()),\n      fetch('https://johnnylaicode.github.io/api/debits.json').then((res) => res.json()),\n    ])\n      .then(([credits, debits]) => {\n        const totalCredits = credits.reduce((acc, credit) => acc + credit.amount, 0);\n        const totalDebits = debits.reduce((acc, debit) => acc + debit.amount, 0);\n        const accountBalance = totalCredits - totalDebits;\n\n        this.setState({ credits, debits, accountBalance });\n      })\n      .catch((error) => console.error('Error fetching data:', error));\n  }\n\n  // Create Routes and React elements to be rendered using React components\n  render() {  \n    // Create React elements and pass input props to components\n    const HomeComponent = () => (<Home accountBalance={this.state.accountBalance} />)\n    const UserProfileComponent = () => (\n      <UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince} />\n    )\n    const LogInComponent = () => (<LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} />)\n    const CreditsComponent = () => (<Credits credits={this.state.creditList}  addCredit={this.addCredit} />) \n    const DebitsComponent = () => (<Debits debits={this.state.debitList} addDebit={this.addDebit} />) \n\n    // Important: Include the \"basename\" in Router, which is needed for deploying the React app to GitHub Pages\n    return (\n      // <Router basename=\"/bank-of-react-starter-code\">\n      <Router basename=\"/my-react-app\">\n        <div>\n          <Route exact path=\"/\" render={HomeComponent} />\n          <Route exact path=\"/userProfile\" render={UserProfileComponent}/>\n          <Route exact path=\"/login\" render={LogInComponent}/>\n          <Route exact path=\"/credits\" render={CreditsComponent}/>\n          <Route exact path=\"/debits\" render={DebitsComponent}/>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/*==================================================\nsrc/index.js\n\nThis file renders the top-level component App which contains all components of the app).\n==================================================*/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n// Note: In above, StrictMode is a tool for highlighting potential problems in an application. \n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}